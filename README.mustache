
{{& package.name}}
==================

![Project Status : work in progress](https://img.shields.io/badge/Project%20status-work%20in%20progress-lightgrey.svg)

[![version](https://img.shields.io/badge/version-{{& package.version}}-blue.svg)]({{& package.homepage}})
[![npm version](https://badge.fury.io/js/{{& furyiopath}}.svg)](https://badge.fury.io/js/{{& furyiopath}})

[![Dependency Status](https://david-dm.org/{{& username}}/{{& package.rawName}}.svg)](https://david-dm.org/{{& username}}/{{& package.rawName}})
[![devDependency Status](https://david-dm.org/{{& username}}/{{& package.rawName}}/dev-status.svg)](https://david-dm.org/{{& username}}/{{& package.rawName}}#info=devDependencies)

[Home Page]({{& package.homepage}})

{{& package.description}}

Purpose
-------

+ Creating a spritesheet generator

Install
-------

```
npm install {{& package.name}}
```

How to use
----------

[See first the Original algorithm README](https://github.com/jakesgordon/bin-packing#readme)

```javascript

var GrowingPacker = require('{{& package.name}}')

var packer = new GrowingPacker({
	//sortMethod: a sort method or a valid sort method name, default to maxside

	blocks: [
		{ w: 100, h: 100 },
		{ w: 100, h: 100 },
		{ w:  80, h:  80 },
		{ w:  80, h:  80 }
	]
});

packer.pack();

console.log(pack.width, pack.height);

var rectangles = packer.rectangles();
	
for(var i = 0, imax = rectangles.length ; i < imax ; i++) {
	var rect = rectangles[i];

	//do something like :
	//DrawRectangle(rect.x, rect.y, block.w, block.h);
}

```

Valid sort methods
------------------

{{& sortMethods}}

Credentials
-----------

The packing algorithm is from [here](https://github.com/jakesgordon/bin-packing)

I just wrap it in a custom API (including the sort methods proposed by [Jakes Gordon](https://github.com/jakesgordon) ) and make it accesible via npm since [that issue](https://github.com/jakesgordon/bin-packing/issues/1) is still opened.